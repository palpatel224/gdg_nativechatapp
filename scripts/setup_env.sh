#!/bin/bash

# Script to read API key from .env and write to iOS xcconfig file
# This ensures iOS app uses the same API key defined in .env

# Determine script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

ENV_FILE="$PROJECT_ROOT/.env"
XCCONFIG_FILE="$PROJECT_ROOT/ios/Flutter/GoogleMapsAPIKey.xcconfig"

# Check if .env file exists
if [ ! -f "$ENV_FILE" ]; then
    echo "❌ ERROR: .env file not found at $ENV_FILE"
    exit 1
fi

# Extract GOOGLE_API_KEY from .env file
# Handles formats like: GOOGLE_API_KEY=value or GOOGLE_API_KEY = 'value' or GOOGLE_API_KEY = "value"
GOOGLE_API_KEY=$(grep -E "^GOOGLE_API_KEY\s*=" "$ENV_FILE" | sed 's/GOOGLE_API_KEY\s*=\s*//;s/^["'"'"']//;s/["'"'"']$//')

# Check if API key was found
if [ -z "$GOOGLE_API_KEY" ]; then
    echo "❌ ERROR: GOOGLE_API_KEY not found in .env file"
    exit 1
fi

# Validate API key format (should start with AIza for Google APIs)
if [[ ! "$GOOGLE_API_KEY" =~ ^AIza ]]; then
    echo "⚠️  WARNING: API key doesn't appear to be valid (should start with 'AIza')"
fi

# Create the xcconfig file with the API key from .env
cat > "$XCCONFIG_FILE" << EOF
// Generated from .env file - DO NOT EDIT MANUALLY
// This file is auto-generated by setup_env.sh during build
GOOGLE_MAPS_API_KEY=$GOOGLE_API_KEY
EOF

echo "✅ Successfully updated $XCCONFIG_FILE with API key from .env"
echo "📍 API Key: ${GOOGLE_API_KEY:0:10}..."
